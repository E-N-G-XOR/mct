apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mct-web-deployment
  # namespace: default
spec:
  selector:
    matchLabels:
      app: mct-web
  replicas: 2
  template:
    metadata:
      labels:
        app: mct-web
    spec:
      containers:
      - name: mct-web
        image: mct-web:1.7.9
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
            - containerPort: 5000
              name: http
              protocol: TCP
#            - containerPort: 443
#              name: https
#              protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
#         volumeMounts:
#             - mountPath: /etc/mct-web-ssl/dhparam
#               name: tls-dhparam-vol
#       terminationGracePeriodSeconds: 60
#       volumes:
#         - name: tls-dhparam-vol
#           secret:
#             secretName: tls-dhparam
---
kind: Service
apiVersion: v1
metadata:
  name: mct-web-service
spec:
  # type: LoadBalancer or NodePort
  selector:
    app: mct-web
  ports:
  - name: http
    port: 80
    targetPort: 5000
#  - name: https
#    port: 443
#    targetPort: 443
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: mct-web-ingress
#   annotations:
#     ingress.kubernetes.io/rewrite-target: /
#     #kubernetes.io/ingress.class: "mct-web"
#     #mct-web.org/ssl-services: "mct-web-service"
# spec:
#   tls:
#     - hosts:
#       - mct-web.sample.com
# #      secretName: tls-certificate
#   rules:
#   - host: mct-web.sample.com
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: mct-web-service
#           servicePort: 80
# #      - path: /
# #        backend:
# #          serviceName: mct-web-service
# #          servicePort: 443
